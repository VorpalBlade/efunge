efunge
======
This is a simple Befunge-93 interpreter coded in what I aim to make idiomatic
Erlang. As this is my first "real" Erlang project I'm sure there are lot of
code that is done the wrong way.

efunge uses arbitrary-sized integers, this is a side effect of Erlang using that
by default. This means that Efunge is Turing complete unlike "normal"
Befunge-93.

To run this you will need to have Erlang installed and erlc in your PATH.
You will also need make to build the project (or you could use c() in erl).

efunge has been tested on Erlang/OTP R12B-4. It may or may not work on other
versions.

Building instructions
---------------------
* Run "make" (without the quotes) in your shell while you are in the efunge
  directory.
* To build a high performance build use:
   ERL_COMPILER_OPTIONS='[inline,native,{hipe,[o3]}]' make
  Note that your erlang needs HIPE support for this, and debugging is near
  impossible in such a build.

Running instructions
--------------------
You can run efunge in two ways:
* Using the wrapper script efunge, by default it will only work when run inside
  build directory. Change $EFUNGE_ROOT at the top to an absolute path if you
  want to run it elsewhere.
* Using 'efunge:start("path/to/befunge/program.bf").' (without the single
  quotes) inside the Erlang shell. Note that the dot after the statement is
  important, do not try to use a semi-colon or such, just use a dot.
  Use 'q().' (wihtout the single quotes) to exit the Erlang shell.

Known bugs and limitations:
* It is slow, but that will not be fixed, if you want a fast Befunge interpreter
  try cfunge (http://rage.kuonet.org/~anmaster/cfunge/) that is coded in C.
  It also handles Funge-98 and Funge-108. However, cfunge only works on POSIX
  platforms.
